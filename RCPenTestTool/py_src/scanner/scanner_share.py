from kivy.weakproxy import WeakProxy as WeakRef
from weakref import WeakMethod as STDWeakMethod
from threading import Thread


class WeakMethod:

    def __init__(self, method):
        self.method = STDWeakMethod(method)

    def __eq__(self, weak_method):
        return self.method() == weak_method.method()

    def __call__(self, *args, **kwargs):
        method = self.method()
        if not method:
            raise ReferenceError("object of weakly-referenced method no longer exists")
        method(*args, **kwargs)


def threaded(fn):
    def wrapper(*args, **kwargs):
        Thread(target=fn, args=args, kwargs=kwargs).start()
    return wrapper
